name: Deploy to Droplet

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add host to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.DROPLET_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy over SSH
        env:
          HOST: ${{ secrets.DROPLET_HOST }}
          USER: ${{ secrets.DROPLET_USER }}
          APP_DIR: ${{ secrets.DROPLET_APP_DIR }}
        run: |
          ssh $USER@$HOST << 'EOF'
            set -e
            cd $APP_DIR || (git clone ${{ github.server_url }}/${{ github.repository }}.git $APP_DIR && cd $APP_DIR)
            git fetch --all
            git reset --hard origin/main
            # Create/refresh .env from existing secrets (ensure already present in server)
            # Optionally: echo VAR=... >> .env
            docker compose -f docker-compose.yml -f docker-compose.prod.yml pull || true
            docker compose -f docker-compose.yml -f docker-compose.prod.yml build --no-cache
            docker compose -f docker-compose.yml -f docker-compose.prod.yml up -d
            docker compose exec api npm run migrate
          EOF
