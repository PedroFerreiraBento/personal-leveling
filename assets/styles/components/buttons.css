/* components/buttons.css - Botões reutilizáveis */

:root {
  /* fallback tokens in case tokens.css isn't loaded yet */
  --btn-radius: 10px;
}

.btn {
  display: inline-flex;
  align-items: center;
  gap: 8px;
  padding: 10px 14px;
  border-radius: var(--radius, var(--btn-radius));
  border: 1px solid var(--border, rgba(148,163,184,0.25));
  background: rgba(17,24,39,0.72);
  color: var(--text, #e5e7eb);
  text-decoration: none;
  cursor: pointer;
  transition: transform var(--dur-fast, .12s) var(--easing, ease), box-shadow var(--dur, .2s) var(--easing, ease), background var(--dur, .2s) var(--easing, ease), border-color var(--dur, .2s) var(--easing, ease);
  box-shadow: var(--shadow-sm, 0 2px 10px rgba(0,0,0,.2));
  -webkit-user-select: none; /* Safari */
  user-select: none;
}
.btn:hover { transform: translateY(-1px); box-shadow: 0 6px 18px rgba(0,0,0,.3); }
.btn:active { transform: translateY(0); box-shadow: 0 2px 8px rgba(0,0,0,.25); }

.btn-primary {
  background: linear-gradient(135deg, var(--accent, #06b6d4) 0%, #3b82f6 100%);
  color: #fff;
  border-color: rgba(255,255,255,0.22);
}
.btn-primary:hover { filter: brightness(1.05); }

.btn-ghost {
  background: transparent;
  border-color: rgba(148,163,184,0.35);
}

.icon-btn {
  width: 40px; height: 40px;
  display: inline-grid; place-items: center;
  border-radius: var(--radius, 10px);
  background: rgba(17,24,39,0.65);
  border: 1px solid var(--border, rgba(148,163,184,0.25));
  color: var(--text, #e5e7eb);
}
.icon-btn:hover { background: rgba(17,24,39,0.8); }

/* Header icon button (legacy class used in header) */
.btn-icon {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 36px; height: 36px;
  border-radius: var(--radius-sm, 8px);
  border: 1px solid var(--border, rgba(148,163,184,0.25));
  background: rgba(255,255,255,0.04);
  color: var(--text, #e5e7eb);
  box-shadow: var(--shadow-sm, 0 2px 8px rgba(0,0,0,0.25));
  transition: background var(--dur, .2s) var(--easing, ease), border-color var(--dur, .2s) var(--easing, ease), transform var(--dur-fast, .12s) var(--easing, ease);
}
.btn-icon:hover { background: rgba(255,255,255,0.06); border-color: var(--accent); }
.btn-icon:active { transform: translateY(1px); }
.btn-icon svg { width: 18px; height: 18px; opacity: .9; }
/* Ensure Material Symbols inside icon buttons are sized consistently */
.btn-icon .material-symbols-outlined { font-size: 20px; line-height: 1; }

/* Material Symbols baseline sizing */
.material-symbols-outlined {
  font-variation-settings: 'FILL' 0, 'wght' 400, 'GRAD' 0, 'opsz' 24;
  font-size: 20px;
  line-height: 1;
  vertical-align: middle;
}

/* Acessibilidade: foco visível */
.btn:focus-visible,
.btn-icon:focus-visible,
.icon-btn:focus-visible {
  outline: 2px solid var(--accent);
  outline-offset: 2px;
  box-shadow: 0 0 0 4px rgba(6,182,212,0.18), var(--shadow-sm, 0 2px 8px rgba(0,0,0,0.25));
}

/* Size variants */
.btn-sm { padding: 8px 12px; border-radius: 8px; }
.btn-lg { padding: 12px 16px; border-radius: 12px; }

/* Tema claro: garantir contraste adequado */
:root[data-theme='light'] .btn {
  background: rgba(255,255,255,0.9);
  color: var(--text, #0f172a);
  border-color: var(--border, rgba(2,6,23,0.12));
  box-shadow: var(--shadow-sm, 0 2px 8px rgba(0,0,0,0.12));
}
:root[data-theme='light'] .btn:hover {
  background: #ffffff;
}

:root[data-theme='light'] .btn-ghost {
  background: rgba(2,6,23,0.04);
  color: var(--text, #0f172a);
  border-color: var(--border, rgba(2,6,23,0.12));
}
:root[data-theme='light'] .btn-ghost:hover {
  background: rgba(2,6,23,0.06);
  border-color: rgba(2,6,23,0.2);
}

:root[data-theme='light'] .icon-btn,
:root[data-theme='light'] .btn-icon {
  background: rgba(255,255,255,0.85);
  color: var(--text, #0f172a);
  border-color: var(--border, rgba(2,6,23,0.12));
  box-shadow: var(--shadow-sm, 0 2px 8px rgba(0,0,0,0.12));
}
:root[data-theme='light'] .icon-btn:hover,
:root[data-theme='light'] .btn-icon:hover {
  background: rgba(255,255,255,0.95);
}

:root[data-theme='light'] .btn-primary {
  /* Keep primary as blue gradient even in light theme */
  background: linear-gradient(135deg, var(--accent, #06b6d4) 0%, #3b82f6 100%);
  color: #ffffff;
  border-color: rgba(2,6,23,0.16);
}

/* Override generic light-theme hover for primary to avoid turning white */
:root[data-theme='light'] .btn-primary:hover {
  background: linear-gradient(135deg, var(--accent, #06b6d4) 0%, #3b82f6 100%);
  color: #ffffff;
  filter: brightness(1.05);
}

/* Dark theme (project uses not-light): ghost default + hover with higher contrast */
:root:not([data-theme='light']) .btn-ghost {
  background: rgba(255,255,255,0.035);
  color: var(--text, #e5e7eb) !important; /* protect from Bootstrap overrides */
  border-color: rgba(148,163,184,0.45);
}
:root:not([data-theme='light']) .btn-ghost:hover {
  background: rgba(255,255,255,0.12);
  border-color: rgba(148,163,184,0.6);
  box-shadow: 0 0 0 2px rgba(6,182,212,0.18) inset;
  color: var(--text, #e5e7eb) !important; /* keep text readable on dark bg */
  filter: none; /* prevent global button:hover brightness from main.css */
}

/* Dark theme: keep any .btn text readable on hover (protects against Bootstrap overrides) */
:root:not([data-theme='light']) .btn:hover {
  color: var(--text, #e5e7eb) !important;
}

/* Dark theme: make theme toggle use a secondary (slate) style for better contrast */
:root[data-theme='dark'] #themeToggle.btn,
:root[data-theme='dark'] .site-header #themeToggle.btn {
  background: linear-gradient(135deg, rgba(30,41,59,0.95), rgba(51,65,85,0.95));
  color: #e5e7eb;
  border-color: rgba(148,163,184,0.35);
}
:root[data-theme='dark'] #themeToggle.btn:hover,
:root[data-theme='dark'] .site-header #themeToggle.btn:hover {
  filter: brightness(1.05);
  border-color: rgba(148,163,184,0.5);
}
